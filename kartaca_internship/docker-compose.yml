version: '3'

volumes:
    prometheus_data: {}
    grafana_data: {}

services:  
  app:
    build: ./python_app
    command: python3 python_app/app.py
    ports:
      - "4444:4444"
    volumes:
      - .:/app 
    links:
      - db
    labels:
      - "traefik.enable=true"
    #routers
      - "traefik.http.routers.app-kartaca-internship.rule=Host(`kartaca.localhost`) && Path(`/pythonapp`)"
      - "traefik.http.routers.app-kartaca-internship.entrypoints=http"
      - "traefik.http.routers.app-kartaca-internship.middlewares=app_middleware"
    #middlewares
      - "traefik.http.middlewares.app_middleware.redirectregex.regex=^http://kartaca.localhost/pythonapp(.)*"
      - "traefik.http.middlewares.app_middleware.redirectregex.replacement=http://localhost:4444/staj$$1"
      - "traefik.http.middlewares.app_middleware.redirectregex.permanent=true"
    

  web:
    build: ./go_app
    command: go run go_app/main.go
    volumes:
      - .:/web
    ports: 
      - "5555:5555"
    links:
      - db
    labels:
      - "traefik.enable=true"
    #routers
      - "traefik.http.routers.web-kartaca-internship.rule=Host(`kartaca.localhost`) && Path(`/goapp`)"
      - "traefik.http.routers.web-kartaca-internship.entrypoints=http"
      - "traefik.http.routers.web-kartaca-internship.middlewares=web_middleware"
    #middlewares
      - "traefik.http.middlewares.web_middleware.redirectregex.regex=^http://kartaca.localhost/goapp(.)*"
      - "traefik.http.middlewares.web_middleware.redirectregex.replacement=http://localhost:5555/staj$$1"
      - "traefik.http.middlewares.web_middleware.redirectregex.permanent=true"
    
  db:
    image: mongo:latest
    hostname: mongo
    environment:
      - MONGO_INITDB_DATABASE=stajdb
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    ports:
      - 27017:27017
    volumes:
      - ./init-db.js:/docker-entrypoint-initdb.d/init-db.js:ro
 
  nodeexporter:
    image: prom/node-exporter:latest
    container_name: nodeexporter
    ports:
      - "9100:9100"

  cadvisor:
    image: gcr.io/google-containers/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys:/sys:ro
      - /:/rootfs:ro
    ports:
      - "8080:8080"
    
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - "9090:9090"
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - "3000:3000"
    labels:
    #routers
      - "traefik.http.routers.grafana-staj-kartaca.rule=Host(`kartaca.localhost`) && Path(`/grafana`)"
      - "traefik.http.routers.grafana-staj-kartaca.entrypoints=http"
      - "traefik.http.routers.grafana-staj-kartaca.middlewares=grafana"
    #middlewares
      - "traefik.http.middlewares.grafana.redirectregex.regex=^http://kartaca.localhost/grafana(.)*"
      - "traefik.http.middlewares.grafana.redirectregex.replacement=http://localhost:3000$$3"
      - "traefik.http.middlewares.grafana.redirectregex.permanent=true"

  reverse-proxy:
    image: traefik:v2.6
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      #- "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
          - traefik.http.routers.api.rule=Host(`traefik.kartaca.local`)
          - traefik.http.routers.api.service=api@internal
    